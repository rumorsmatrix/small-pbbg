A timer based game

Might as well make the most of this isolation, I guess

Web based, obviously, and text based, and basically Gates of Survival but not so shitty in the UI

possibly sci-fi based, using the oryx 16bit sci-fi sprites I have access to?
	could do something inspired by eg: no man's sky, star trek

stripped-back laravel install (again)?
	composer create-project --prefer-dist laravel/laravel <direcory to create>

another option would be to just put index files in folders under public/ and have some kind of dead simple framework
where every index page/folder was it's own self-contained "thing"

an object defining a "task/action" that new ones can inherit from, bung class names in the database, etc


Oxanium on google fonts will set the scene :)

	So, do we go for a full-on custom stylesheet (again) and a more-or-less client-side JS thing



php artisan make:migration create_officers_table --create=users




what does the user do
and why
is there any peril, resource management, etc

RESOURCE MANAGEMENT are the officers
Officers have a LEVEL, and a branch: SCIENCE, ENGINEERING, COMMAND
	Maybe the branches could have sub-specialties:
		BLUE: SCIENCE:
			COMPUTING
			MEDICINE
			GEOPHYSICS
			ASTROMETRICS
		GOLD: "OPERATIONS"
			ENGINEERING
			SECURITY
			COMPUTING
			FABRICATION
			MAINTAINENCE
		RED: COMMAND
			PILOTING, NAVIGATION
			COMMUNICATIONS
			TAC OFFICER
			STRATEGIC
			HUMAN RESOURCES
			LOGISTICS

difficulties of tasks/chance of success could be something like
	success = base_success + (level_required * 0.01) + (specialty level * 0.1)
when officers level up they gain +1 to their level and their speciality, but no-one specialises before
level 20, or something like that...


		'Cadet, grade I',
		'Cadet, grade II',
		'Cadet, grade III',
		'Lieutenant, junior grade',
		'Ensign, grade I',
		'Ensign, grade II',
		'Ensign, grade III',
		'Ensign, grade IV',
		'Ensign, grade V',
		'Lieutenant, junior grade',
		'Lieutenant, grade I',
		'Lieutenant, grade II',
		'Lieutenant, grade III',
		'Lieutenant, grade IV',
		'Lieutenant, grade V',
		'Lieutenant commander, grade I',
		'Lieutenant commander, grade II',
		'Lieutenant commander, grade III',
		'Lieutenant commander, grade IV',
		'Lieutenant commander, grade V',
		'Commander, grade I',
		'Commander, grade II',
		'Commander, grade III',
		'Commander, grade IV',
		'Commander, grade V',
		'Captain, grade I',
		'Captain, grade II',
		'Captain, grade III',
		'Captain, grade IV',
		'Captain, grade V',

commodore

==== admiralty ===
rear admiral, lower half
rear admiral
vice admiral
admiral
fleet admiral


Officers have HEALTH and ENERGY, doing stuff costs one or the other

Lots of items: WARP FUEL, TOXIC GASES, WORMHOLE FOOD, PHASE PARTICULATES, DATA CORE FRAGMENTS, whatever
See if we can't procedurally generate this -- Stars Without Number might be a good starting point for getting
items and corporation names, etc.?


the five ever-refreshing quests thing from animal crossing is amazing, should def. implement that
	something like the warcraft mission table, but with the starfleet uniformed guys, assign them to tasks of varying lengths
	OOH local tasks, "DUTIES", keep the browser open, auto repeat
	long-term server-side tasks, "AWAY MISSIONS"


task 	-> duty
		-> mission

tasks:
	id, blah blah
	name
	description,
	duration (secs),
	req_level,
	req_branch,
	req_package_id,
	reward_package_id

packages:
	id, etc
	name,

package_component:
	id, etc,
	reward_package_id,
	item_id,
	min_quantity,
	max_quantity,




START CONDITIONS:
	Officer
		LEVEL
		BRANCH
		SPECIALITY
	Item 1
	Item 2 (don't go mad making these _N_ items, just stick to 2 and be done with it)

END CONDITION
	chance of success
	does it repeat
	rewards
		list of items -- could this also be a pool? For gatcha rewards?
		some XP for the officer

It would be AWESOME if a cron script could generate new duties/away missions and corrisponding quests (requisitions? tasks?) so
there's an infinite amount of content


OK so it's set on a space station, a research centre
You manage your own branch
Everyone gets conflicting orders from THE ADMIRALTY
VALUE OF ITEM = (seconds to obtain * level needed) * item specific multiplier[0.4 ... 1.2] which is updated DAILY


lots of little progress bars and updating numbers, show stats and stuff, like Gates does.
websockets for chat, one day.


You work for the Star Federation of Rationalised Territories, most commonly abbreviated as STARFART. Your job is to manage an efficient team of commissioned officers on a remote space station, STARFART SEVEN. The purpose of this highly advanced research platform is to conduct deeply important and highly classified scientific studies into the nature of black holes. You will receive tasks from the dreaded Admiralty, and must assign your officers to them as best you see fit.

Tasks are divided into two categories: DUTIES and MISSIONS. Duties are simple actions that can be repeated indefinitely, so long as you keep the officer assigned to that duty, and keep the STARFART tab in your web browser open. Missions are larger undertakings that will progress even if you close the browser tab, but they can potentially tie up an officer for many hours at a time.








what does the tiny manifesto say?

	- if a mainstream games site is willing to cover it it’s not weird enough
	- if it doesn’t run in a web browser it might as well not exist
	- when the player says there is a problem they are usually right. when they tell you what the problem is they are always wrong
	- the game world should go on whether anyone’s playing it or not
	- some games are mines. some games are gardens. make gardens, not mines
	- most people who say the word “game” actually mean “vending machine”
	- take the most distinctive characteristic of the thing you just made, and make it MORE SO. do this especially if the most distinctive characteristic is bad
	- you learn where the edges of a medium are by pushing in a direction until something breaks
	- there are three acceptable timeframes for game development: 2 hours, 2 weeks, or 2 decades
	- where ? does it fit ? into the player’s life ???


 <link href="../assets/css/blk-design-system.css?v=1.0.0" rel="stylesheet" />



We need to notify users when their tasks complete, but we don't really want to be looping through them all the time, or refreshing their tasks from the database, etc etc.

when a user connects AND when an officer starts a new task

	loop through all the tasks | the task that was just started
		add this task to an array on the server?
		keyed by unix time?


tasks, even repeatable ones, could be entirely server-side!
	when a task finishes
		if it's repeatable, add a new one
			this would continue as long as the server is running!
				1 * (max_officers) * players
					we'd have to implement energy on officers to stop this being ridiculous

OR, for repeatable tasks, we go back to polling, where the server doesn't have to do anything
	when the time is up, the client asks and gets a response, which queues the next action





I think the WSS needs to keep a list of in-progress tasks, which is tricky I think
NO IT DOESN'T
thery're on the officer object
so we only need to do something like



So a week into April and zero progress made, really. Well, that's not true. I have the beginnings of quite a nice PHP framework going, some Illuminate, nice routing, a Controller/View/Templating system that isn't bad, that kind of thing. I just haven't had the energy to do much about it. I have caught nicely up with Animal Crossing, though, so I should have some more evening time now :)

so now I'm thinking not so much on the websockets but lots of AJAX instead.

I'm also thinking about ditching the star trek in favour of a more traditional fantasy thing, because it's easier to write and find resources for.

